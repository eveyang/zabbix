#coding=utf-8
import sys
import requests,re,pymysql,time,datetime
import threading
import queue as Queue
import os
start=time.time()
#ip_url='http://'
domain=[]
port=[]
error=[]
start = time.time()
def insert_mysql():
    info = 'docker端口检查异常的地址:'
    info2=' '.join(error)
    clock=datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    db = pymysql.connect("******","root","******","server_control" )
# 使用cursor()方法获取操作游标
    cursor = db.cursor()
# SQL 插入语句
    sql="insert into tb_problem(clock,problem_name,severity,acknowledged,flg,back_flg) values('%s','%s',4,0,0,0)"%(clock,info+info2)
    try:
   # 执行sql语句
        cursor.execute(sql)
   # 执行sql语句
        db.commit()
        print("报警信息入库成功")
        time.sleep(5)
    except:
   # 发生错误时回滚
        db.rollback()
# 关闭数据库连接
    db.close()
def getHttpStatusCode(url):
    try:
        request = requests.get(url)
        httpStatusCode = request.status_code
        return httpStatusCode
    except requests.exceptions.HTTPError as e:
        return e
def isIP(str):
    p = re.compile('^((25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(25[0-5]|2[0-4]\d|[01]?\d\d?)$')
    if p.match(str):
        return True
    else:
        print("IP地址%s不合法"%(str))
        exit(0)

ip=input('请输入IP地址，多个IP地址以空格隔开:').split( )
for i in ip:
    isIP(str=i)

for value in range(int(input('start:')),int(input('end:'))):
    port.append(value)
for i in port:
    for j in ip:
        domain.append(str(j)+':'+str(i))
print(domain)
class myThread(threading.Thread):
    def __init__(self, name, q):
        threading.Thread.__init__(self)
        self.name = name
        self.q = q

    def run(self):
        print("Starting " + self.name)
        while True:
            try:
                crawler(self.name, self.q)
            except:
                break
        print("Exiting " + self.name)


def crawler(threadName, q):
    # 从队列里获取url
    url = q.get(timeout=2)
    try:
        r = requests.get(url, timeout=5).status_code
        # 打印：队列长度，线程名，响应码，正在访问的url
        if r == 404:
            pass
    except Exception as e:
        error.append(url)




# 设置队列长度
workQueue = Queue.Queue(100000)
threadList=[]
for line in range(len(domain)):
    threadList.append(line)
# 线程池
threads = []

# 创建新线程
for tName in threadList:
    thread = myThread(tName, workQueue)
    thread.start()
    threads.append(thread)

# 将url填充到队列
for url in domain:
    workQueue.put(url)

# 等待所有线程完成
for t in threads:
    t.join()

end = time.time()
#print("不通的地址为%s"%(error))
print('多线程总耗时为：', end - start)
print('Exiting Main Thread')
if len(error) == 0:
    print('端口检查完毕，无异常')
    time.sleep(5)
else:
    pass
    #insert_mysql()

